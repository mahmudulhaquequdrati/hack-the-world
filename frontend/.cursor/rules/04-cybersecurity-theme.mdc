---
description:
globs:
alwaysApply: false
---
# Cybersecurity Theme & UI Guidelines

## üé® Visual Theme Standards

### Color Palette (from README.md & PLANNING.md)
```css
/* Primary Cybersecurity Colors */
--cyber-green: #00ff00; /* Primary terminal green */
--cyber-green-dark: #00cc00; /* Darker variant */
--cyber-green-light: #33ff33; /* Lighter variant */
--terminal-bg: #0a0a0a; /* Terminal background */
--terminal-border: #333333; /* Terminal borders */

/* Difficulty Color System */
--beginner: #4ade80; /* Green */
--intermediate: #fbbf24; /* Yellow */
--advanced: #f87171; /* Red */
--expert: #a855f7; /* Purple */
```

### Typography Standards
- **Primary Font**: JetBrains Mono (monospace) for terminal authenticity
- **Secondary Font**: Inter (sans-serif) for readable content
- **Terminal Text**: Always use `font-mono` with `text-green-400`

## üñ•Ô∏è Terminal UI Patterns

### Terminal Window Structure
Use [TerminalWindow](mdc:src/components/terminal/TerminalWindow.tsx) component for consistency:

```typescript
import { TerminalWindow } from '@/components/terminal';

<TerminalWindow title="Security Analysis">
  <div className="font-mono text-green-400 text-sm">
    // Terminal content here
  </div>
</TerminalWindow>
```

### Matrix Effects Implementation
- **Background**: Use [MatrixRain](mdc:src/components/effects/MatrixRain.tsx) for immersive backgrounds
- **Text Animation**: Implement [TypewriterText](mdc:src/components/effects/TypewriterText.tsx) for dramatic reveals
- **Terminal Glows**: Apply green glow effects with `shadow-lg shadow-green-500/20`

## üéÆ Interactive Element Styling

### Button Patterns
```css
/* Hacker-style Button */
.hacker-btn {
  @apply bg-black border-2 border-green-500 text-green-400 font-mono px-4 py-2 rounded;
  @apply hover:bg-green-500/10 hover:text-green-300 transition-all duration-300;
  @apply focus:ring-2 focus:ring-green-500 focus:outline-none;
}

/* Action Buttons */
.action-btn {
  @apply bg-green-500/20 border border-green-500 text-green-400 font-mono;
  @apply hover:bg-green-500 hover:text-black transition-colors;
}
```

### Game & Lab Interface Styling
Based on the project's 50+ components achievement documented in [README.md](mdc:README.md):

```typescript
// Game Card Pattern
const gameCardStyles = {
  base: "bg-black/80 border border-green-500/30 rounded-lg p-4",
  header: "text-green-400 font-mono text-lg font-bold",
  content: "text-green-300 font-mono text-sm",
  interactive: "hover:border-green-500 hover:shadow-lg hover:shadow-green-500/20",
};

// Lab Interface Pattern
const labStyles = {
  container: "bg-gradient-to-b from-black to-gray-900 min-h-screen",
  terminal: "bg-black border-2 border-green-500/50 rounded p-4",
  code: "font-mono text-green-400 text-sm whitespace-pre-wrap",
};
```

## üèÜ Achievement & Progress UI

### Difficulty Badge Implementation
Reference [DifficultyBadge](mdc:mcd:src/components/common/DifficultyBadge.tsx):

```typescript
interface DifficultyBadgeProps {
  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';
  className?: string;
}

const difficultyColors = {
  beginner: "bg-green-500 text-black",
  intermediate: "bg-yellow-500 text-black",
  advanced: "bg-red-500 text-white",
  expert: "bg-purple-500 text-white",
};
```

### Progress Bar Styling
Reference [ProgressBar](mdc:mcd:src/components/common/ProgressBar.tsx):

```typescript
const progressBarStyles = {
  container: "w-full bg-gray-800 rounded-full h-2 border border-green-500/30",
  fill: "h-full bg-gradient-to-r from-green-600 to-green-400 rounded-full",
  glow: "shadow-lg shadow-green-500/50",
};
```

## üìä Data Visualization Theme

### Stats Card Pattern
Following the 83% code reduction achievement, use [StatCard](mdc:mcd:src/components/common/StatCard.tsx):

```typescript
interface StatCardProps {
  title: string;
  value: string | number;
  icon: LucideIcon;
  color?: string;
}

const statCardTheme = {
  container: "bg-black/50 border border-green-500/30 rounded-lg p-6",
  title: "text-green-400 font-mono text-sm uppercase tracking-wider",
  value: "text-green-300 font-mono text-2xl font-bold",
  icon: "text-green-500 w-8 h-8",
};
```

### Chart Styling (Recharts Integration)
```typescript
const chartTheme = {
  grid: { stroke: '#334155', strokeWidth: 1 },
  axis: { tick: { fill: '#22c55e', fontFamily: 'JetBrains Mono' } },
  line: { stroke: '#22c55e', strokeWidth: 2 },
  area: { fill: 'url(#greenGradient)' },
};

// Gradient definition for charts
const chartGradients = (
  <defs>
    <linearGradient id="greenGradient" x1="0" y1="0" x2="0" y2="1">
      <stop offset="5%" stopColor="#22c55e" stopOpacity={0.8}/>
      <stop offset="95%" stopColor="#22c55e" stopOpacity={0.1}/>
    </linearGradient>
  </defs>
);
```

## üó∫Ô∏è Navigation Theme Integration

### Navigation Menu Styling
Based on the centralized navigation patterns in [README.md](mdc:README.md):

```typescript
const navigationStyles = {
  container: "bg-black/90 border-b border-green-500/30 backdrop-blur-md",
  link: "text-green-400 font-mono hover:text-green-300 transition-colors",
  active: "text-green-300 border-b-2 border-green-500",
  logo: "text-green-500 font-mono font-bold text-xl",
};
```

### Breadcrumb Pattern
```typescript
const breadcrumbStyles = {
  container: "flex items-center space-x-2 text-green-400 font-mono text-sm",
  separator: "text-green-600",
  link: "hover:text-green-300 transition-colors",
  current: "text-green-300 font-semibold",
};
```

## üì± Responsive Cybersecurity Design

### Mobile Terminal Adaptation
Ensure terminal theme works across all devices (part of performance targets in [README.md](mdc:README.md)):

```css
/* Base mobile styles */
.terminal-mobile {
  @apply text-xs font-mono text-green-400;
  @apply p-2 bg-black border border-green-500/50;
}

/* Tablet adaptations */
@screen md {
  .terminal-mobile {
    @apply text-sm p-4;
  }
}

/* Desktop enhancements */
@screen lg {
  .terminal-mobile {
    @apply text-base p-6;
    @apply shadow-2xl shadow-green-500/20;
  }
}
```

### Touch Interface Considerations
```css
/* Larger touch targets for mobile */
.mobile-btn {
  @apply min-h-[44px] min-w-[44px] p-3;
  @apply border-2 border-green-500 text-green-400;
}

/* Hover states for desktop only */
@media (hover: hover) {
  .mobile-btn:hover {
    @apply bg-green-500/10 border-green-400;
  }
}
```

## üîê Accessibility & Contrast

### WCAG Compliance with Cybersecurity Theme
Meeting the >95% accessibility target documented in [README.md](mdc:README.md):

```css
/* High contrast ratios */
.accessible-green {
  /* Green on black: 14.3:1 ratio (AAA compliant) */
  @apply text-green-400 bg-black;
}

.accessible-yellow {
  /* Yellow on black: 12.6:1 ratio (AAA compliant) */
  @apply text-yellow-400 bg-black;
}

/* Focus indicators */
.focus-visible {
  @apply focus:ring-2 focus:ring-green-500 focus:ring-offset-2;
  @apply focus:ring-offset-black focus:outline-none;
}
```

### Screen Reader Support
```typescript
// ARIA labels for cybersecurity components
const accessibilityProps = {
  terminalWindow: {
    role: "region",
    "aria-label": "Terminal interface",
    "aria-live": "polite",
  },
  difficultyBadge: {
    role: "status",
    "aria-label": `Difficulty level: ${difficulty}`,
  },
  progressBar: {
    role: "progressbar",
    "aria-valuenow": progress,
    "aria-valuemin": 0,
    "aria-valuemax": 100,
  },
};
```

## üé¨ Animation & Effects

### Matrix Rain Background
```typescript
// Configuration for MatrixRain component
const matrixConfig = {
  characters: "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*()_+-=[]{}|;:,.<>?",
  fontSize: 14,
  animationSpeed: 50,
  density: 0.025,
  color: "#22c55e",
};
```

### Terminal Typewriter Effects
```typescript
// TypewriterText configuration
const typewriterConfig = {
  speed: 100, // milliseconds per character
  deleteSpeed: 50,
  pauseTime: 2000, // pause at end
  loop: false,
  cursor: true,
  cursorColor: "#22c55e",
};
```

### Glow Effects
```css
/* Terminal glow */
.terminal-glow {
  @apply shadow-lg shadow-green-500/30;
  box-shadow:
    0 0 20px rgba(34, 197, 94, 0.3),
    inset 0 0 20px rgba(34, 197, 94, 0.1);
}

/* Text glow for emphasis */
.text-glow {
  text-shadow:
    0 0 5px #22c55e,
    0 0 10px #22c55e,
    0 0 15px #22c55e;
}
```

## üß™ Theme Testing Requirements

### Visual Testing Checklist
- [ ] All components use established color palette
- [ ] Terminal styling consistent across components
- [ ] Accessibility contrast ratios meet WCAG AAA
- [ ] Responsive design maintains theme integrity
- [ ] Matrix effects perform well on all devices
- [ ] Focus indicators visible and styled correctly

### Color Contrast Testing
```typescript
// Test color combinations meet accessibility standards
const contrastTests = [
  { bg: '#000000', fg: '#22c55e', expected: 'AAA' }, // Green on black
  { bg: '#000000', fg: '#eab308', expected: 'AAA' }, // Yellow on black
  { bg: '#000000', fg: '#ef4444', expected: 'AA' },  // Red on black
  { bg: '#a855f7', fg: '#ffffff', expected: 'AA' }, // White on purple
];
```

## ‚úÖ Theme Implementation Checklist

Before creating/updating components:
- [ ] Uses established cybersecurity color palette
- [ ] Implements terminal font (JetBrains Mono) where appropriate
- [ ] Includes proper terminal window styling
- [ ] Applies responsive design patterns
- [ ] Meets WCAG accessibility standards
- [ ] Includes hover and focus states
- [ ] Uses appropriate glow effects
- [ ] Implements proper ARIA labels
- [ ] Tests across mobile and desktop
- [ ] Follows component naming conventions

## üìö Theme Documentation

All cybersecurity theme standards, design patterns, and implementation guidelines are documented in [README.md](mdc:README.md). Reference this file for:
- Complete design system and color palette
- Component styling patterns and examples
- Accessibility requirements and compliance
- Performance considerations for animations
- Mobile responsive design guidelines
